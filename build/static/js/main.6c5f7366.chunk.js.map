{"version":3,"sources":["components/Header.js","components/CalcInputForm.js","services/nedbetalingsplanServices.js","components/Nedbetalingsplan.js","components/Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Header","title","useStyles","makeStyles","theme","root","width","margin","height","spacing","varighetSliderMarks","value","label","varighetValueText","renteSliderMarks","renteValueText","CalcInputForm","handleSubmit","handleLaanebelopChange","handleNedbetalingstidChange","handleRenteChange","classes","className","onSubmit","autoComplete","style","marginBottom","TextField","onChange","Slider","name","defaultValue","step","min","max","getAriaValueText","aria-labelledby","marks","valueLabelDisplay","Button","variant","color","type","genererNedbetalingsplan","payload","a","request","axios","post","response","data","columns","id","minWidth","format","toLocaleString","container","maxHeight","Nedbetalingsplan","nedbetalingsplan","useState","page","setPage","rowsPerPage","setRowsPerPage","Paper","TableContainer","Table","stickyHeader","aria-label","table","TableHead","TableRow","map","column","TableCell","align","TableBody","slice","row","hover","role","tabIndex","dato","TablePagination","rowsPerPageOptions","component","count","length","onChangePage","event","newPage","onChangeRowsPerPage","target","Notification","message","charAt","App","setNedbetalingsplan","laanebelop","setLaanebelop","rente","setRente","varighet","setVarighet","setUtlopsDato","setSaldoDato","setDatoForsteInnbetaling","notificationMessage","setNotificationMessage","notify","text","setTimeout","Container","fixed","preventDefault","idag","Date","idagFormatert","toISOString","substring","forsteInnbetalingDatoFormatert","getFullYear","getMonth","getDate","utlopsAar","utlopsMnd","utlopsDag","datoForSisteInnbetaling","datoForSisteInnbetalingFormatert","nominellRente","terminGebyr","utlopsDato","saldoDato","Number","isInteger","nedbetalingsplanService","then","returned","catch","error","console","log","marginTop","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6c5f7366.chunk.js","sourcesContent":["import React from \"react\";\r\nimport 'fontsource-roboto';\r\n\r\nconst Header = ({title}) => {\r\n  return (\r\n    <h1>{title}</h1>\r\n  )\r\n}\r\n\r\nexport default Header","import React from \"react\";\r\nimport Slider from \"@material-ui/core/Slider\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, TextField } from \"@material-ui/core\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 300,\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst varighetSliderMarks = [\r\n  {\r\n    value: 1,\r\n    label: \"1 år\",\r\n  },\r\n\r\n  {\r\n    value: 25,\r\n    label: \"25 år\",\r\n  },\r\n  {\r\n    value: 30,\r\n    label: \"30 år\",\r\n  },\r\n];\r\n\r\nconst varighetValueText = (value) => `${value} år`;\r\n\r\nconst renteSliderMarks = [\r\n  {\r\n    value: 0.25,\r\n    label: \"0.25 %\",\r\n  },\r\n  {\r\n    value: 3.0,\r\n    label: \"3.00 %\",\r\n  },\r\n  {\r\n    value: 10.0,\r\n    label: \"10.00 %\",\r\n  },\r\n];\r\n\r\nconst renteValueText = (value) => `${value} %`;\r\n\r\nconst CalcInputForm = ({\r\n  handleSubmit,\r\n  handleLaanebelopChange,\r\n  handleNedbetalingstidChange,\r\n  handleRenteChange,\r\n}) => {\r\n \r\n  const classes = useStyles();\r\n  return (\r\n      <form className={classes.root} onSubmit={handleSubmit} autoComplete=\"off\">\r\n        <div style={{ marginBottom: \"50px\" }}>\r\n          <TextField label=\"Lånebeløp\" onChange={handleLaanebelopChange} />\r\n        </div>\r\n        <div style={{ marginBottom: \"50px\" }}>\r\n          <Slider\r\n            name=\"varighetSlider\"\r\n            onChange={handleNedbetalingstidChange}\r\n            defaultValue={25}\r\n            step={1}\r\n            min={1}\r\n            max={30}\r\n            getAriaValueText={varighetValueText}\r\n            aria-labelledby=\"discrete-slider-always\"\r\n            marks={varighetSliderMarks}\r\n            valueLabelDisplay=\"on\"\r\n            \r\n          />\r\n        </div>\r\n        <div style={{ marginBottom: \"30px\" }}>\r\n          <Slider\r\n            defaultValue={3.0}\r\n            step={0.25}\r\n            min={0.25}\r\n            max={10.0}\r\n            getAriaValueText={renteValueText}\r\n            aria-labelledby=\"discrete-slider-always\"\r\n            marks={renteSliderMarks}\r\n            valueLabelDisplay=\"on\"\r\n            onChange={handleRenteChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\">\r\n            Submit\r\n          </Button>\r\n        </div>\r\n      </form>\r\n\r\n  );\r\n};\r\n\r\nexport default CalcInputForm;\r\n","import axios from \"axios\";\r\n\r\nconst baseUrl = \"/api/nedbetalingsplanFraTil\";\r\n\r\nconst genererNedbetalingsplan =  async (payload) => {\r\n  const request = axios.post(baseUrl, payload);\r\n  const response = await request;\r\n  return response.data;\r\n};\r\n\r\nexport default { genererNedbetalingsplan };\r\n","import React, { useState } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Table from \"@material-ui/core/Table\";\r\nimport TableBody from \"@material-ui/core/TableBody\";\r\nimport TableCell from \"@material-ui/core/TableCell\";\r\nimport TableContainer from \"@material-ui/core/TableContainer\";\r\nimport TableHead from \"@material-ui/core/TableHead\";\r\nimport TableRow from \"@material-ui/core/TableRow\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport TablePagination from \"@material-ui/core/TablePagination\";\r\n\r\nconst columns = [\r\n  {\r\n    id: \"restgjeld\",\r\n    label: \"Restgjeld\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('nb-NO') + \" kr\",\r\n  },\r\n  { id: \"dato\", label: \"Dato\", minWidth: 100 },\r\n  {\r\n    id: \"innbetaling\",\r\n    label: \"Innbetaling\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('nb-NO') + \" kr\",\r\n  },\r\n  {\r\n    id: \"gebyr\",\r\n    label: \"Gebyr\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('nb-NO') + \" kr\",\r\n  },\r\n  {\r\n    id: \"renter\",\r\n    label: \"Renter\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('nb-NO') + \" kr\",\r\n  },\r\n  {\r\n    id: \"total\",\r\n    label: \"Total\",\r\n    minWidth: 100,\r\n    format: (value) => value.toLocaleString('nb-NO') + \" kr\",\r\n  },\r\n];\r\nconst useStyles = makeStyles({\r\n  root: {\r\n    width: \"80%\",\r\n  },\r\n  container: {\r\n    maxHeight: 440,\r\n  },\r\n});\r\n\r\nconst Nedbetalingsplan = ({ nedbetalingsplan }) => {\r\n  const classes = useStyles();\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(10);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <TableContainer className={classes.container}>\r\n        <Table stickyHeader aria-label=\"sticky table\" className={classes.table}>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((column) => (\r\n                <TableCell\r\n                  key={column.id}\r\n                  align={column.align}\r\n                  style={{ minWidth: column.minWidth }}\r\n                >\r\n                  {column.label}\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {nedbetalingsplan\r\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n              .map((row) => {\r\n                return (\r\n                  <TableRow hover role=\"checkbox\" tabIndex={-1} key={row.dato}>\r\n                    {columns.map((column) => {\r\n                      const value = row[column.id];\r\n                      return (\r\n                        <TableCell key={column.id} align={column.align}>\r\n                          {column.format && typeof value === \"number\"\r\n                            ? column.format(value)\r\n                            : value}\r\n                        </TableCell>\r\n                      );\r\n                    })}\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      <TablePagination\r\n        rowsPerPageOptions={[10, 25, 100]}\r\n        component=\"div\"\r\n        count={nedbetalingsplan.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Nedbetalingsplan;\r\n","import React from 'react'\r\n\r\nconst Notification = ({ message }) => {\r\n  if (message === null) {\r\n    return null\r\n  } else if (message.charAt(0) ==='E' || message.charAt(0) === 'F') { //E=error, F=feil\r\n    return (\r\n      <div className='negative'>\r\n        {message}\r\n      </div>\r\n    )\r\n  } else {\r\n\r\n    return (\r\n      <div className='positive'>\r\n        {message}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Notification","import React, { useState } from \"react\";\nimport Header from \"./components/Header\";\nimport CalcInputForm from \"./components/CalcInputForm\";\nimport nedbetalingsplanService from \"./services/nedbetalingsplanServices\";\nimport \"fontsource-roboto\";\nimport { Container } from \"@material-ui/core\";\nimport Nedbetalingsplan from \"./components/Nedbetalingsplan.js\";\nimport Notification from \"./components/Notification\";\n\nconst title = \"Lånekalkulator\";\nconst gebyr = 30;\n\nconst App = () => {\n  const [nedbetalingsplan, setNedbetalingsplan] = useState({});\n  const [laanebelop, setLaanebelop] = useState(0);\n  const [rente, setRente] = useState(3.0); //default 3.0% rente\n  const [varighet, setVarighet] = useState(25); //default 25% rente\n  const [utlopsDato, setUtlopsDato] = useState(\"\");\n  const [saldoDato, setSaldoDato] = useState(\"\");\n  const [datoForsteInnbetaling, setDatoForsteInnbetaling] = useState(\"\");\n  const [notificationMessage, setNotificationMessage] = useState(null);\n\n\n  const notify = text => {\n    setNotificationMessage(text)\n    setTimeout(() => {\n      setNotificationMessage(null)\n    }, 5000)\n  }\n\n  /**\n   * Håndterer endringer i tekst-input elementet der bruker velger lånebeløp\n   * @param {DOMEvent} event\n   */\n  const handleLaanebelopChange = (event) => {\n    setLaanebelop(event.target.value);\n  };\n\n  /**\n   * Håndterer rangeslideren der bruker velger lånets varighet\n   * @param {DOMEvent} event\n   */\n  const handleVarighetChange = (event, value) => {\n    setVarighet(value);\n  };\n\n  /**\n   * Håndterer endring av rangeslideren der bruker velger rente\n   * @param {DOMEvent} event\n   */\n  const handleRenteChange = (event, value) => {\n    setRente(value);\n  };\n\n  /**\n   * Når all data sendes vil denne metoden sette nedbetalingsplanen i state.\n   * @param {DOMEvent} event\n   */\n  const handleFormSubmit = (event) => {\n    event.preventDefault();\n\n    const idag = new Date();\n    const idagFormatert = idag.toISOString().substring(0, 10);\n    setSaldoDato(idagFormatert);\n\n    const forsteInnbetalingDato = new Date(\n      idag.getFullYear(),\n      idag.getMonth() + 1,\n      idag.getDate()\n    );\n    const forsteInnbetalingDatoFormatert = forsteInnbetalingDato\n      .toISOString()\n      .substring(0, 10);\n    setDatoForsteInnbetaling(forsteInnbetalingDatoFormatert);\n\n    let utlopsAar = idag.getFullYear() + varighet;\n    let utlopsMnd = idag.getMonth();\n    let utlopsDag = idag.getDate();\n    \n    const datoForSisteInnbetaling = new Date(utlopsAar, utlopsMnd, utlopsDag);\n    const datoForSisteInnbetalingFormatert = datoForSisteInnbetaling\n      .toISOString()\n      .substring(0, 10);\n    setUtlopsDato(datoForSisteInnbetaling);\n\n    const payload = {\n      laanebelop: laanebelop,\n      nominellRente: rente,\n      terminGebyr: gebyr,\n      // varighet: varighet,\n      utlopsDato: datoForSisteInnbetalingFormatert,\n      saldoDato: idagFormatert,\n    };\n\n    if(!Number.isInteger(Number(laanebelop))){\n      notify(`Feil, lånebeløpet må være tall!`);\n      return;\n    }\n\n    if(Number(laanebelop < 10000)){\n      notify(`Feil, lånebeløp må være over 10,000 kr`);\n      return;\n    }\n    \n\n    nedbetalingsplanService\n      .genererNedbetalingsplan(payload)\n      .then((returned) => {\n        setNedbetalingsplan(returned);\n        notify(`Nedbetalingsplan generert`)\n      })\n      .catch((error) => console.log(error));\n\n  };\n\n    \n  return (\n      <Container fixed>\n        <Header title={title} />\n        <Notification message={notificationMessage}/>\n        <CalcInputForm\n          handleSubmit={handleFormSubmit}\n          handleLaanebelopChange={handleLaanebelopChange}\n          handleNedbetalingstidChange={handleVarighetChange}\n          handleRenteChange={handleRenteChange}\n        />\n        <div style={{marginTop: \"10px\"}}>\n        {nedbetalingsplan.length > 0 && \n          <Nedbetalingsplan nedbetalingsplan={nedbetalingsplan}/>\n        }\n        </div>\n        \n      </Container>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}